Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
analysis_csv = paste0(dock_dir, "/", dock, "_summary.csv")
write.csv(analysis, file = analysis_csv)
print(paste0("Created summary CSV"))
#	Fill in analysis data
for(l in ligset_list) {
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
}
for(l in ligset_list) {
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
analysis_csv = paste0(dock_dir, "/", dock, "_summary.csv")
write.csv(analysis, file = analysis_csv)
print(paste0("Created summary CSV"))
### Docking data graphs (hepi and p300 - pls1a and hls1)
#		2/14/16 Zarek Siegel
#		2/21/16 up to full ggplot2 replacement
#		2/23/16 more density plots, p300 and hepi compatible
#	v1.0 3/16/16 lots stuff
rm(list=ls(all=TRUE)) # clear out old variables
library(foreign) # for reading csv
library(ggplot2)
library(reshape2)
### Command line arguments
args <- commandArgs()
script_path <- args[4]
script_path <- sub("--file=", "", script_path)
base_dir <- sub("/scripts/postdocking_graphs.R", "", script_path)
if(is.na(base_dir)) {
base_dir <- "/Users/zarek/lab/zvina"
}
dock <- args[6]
dock <- "h11"
### Sourcing docking parameters from .../Dockings.csv
dockings_csv <- paste0(base_dir, "/", "Dockings.csv")
dockings_df <- read.csv(dockings_csv)
prot <- as.character(dockings_df$Protein[dockings_df$Docking.ID == dock])
date <- as.character(dockings_df$Date[dockings_df$Docking.ID == dock])
prot_file <- as.character(dockings_df$Protein.File[dockings_df$Docking.ID == dock])
ligset <- as.character(dockings_df$Ligset[dockings_df$Docking.ID == dock])
box <- as.character(dockings_df$Gridbox[dockings_df$Docking.ID == dock])
exhaust <- as.character(dockings_df$Exhaustiveness[dockings_df$Docking.ID == dock])
n_models <- as.integer(dockings_df$Number.of.Models[dockings_df$Docking.ID == dock])
n_cpus <- as.integer(dockings_df$Number.of.CPUs[dockings_df$Docking.ID == dock])
notes <- as.character(dockings_df$Notes[dockings_df$Docking.ID == dock])
### Sourcing ligset list parameters from .../ligsets/LIGSET/LIGSET_list.txt
ligset_list_txt <- paste0(base_dir, "/ligsets/", ligset, "/", ligset, "_list.txt")
ligset_list <- read.delim(ligset_list_txt, header = F, sep = "\n")
ligset_list <- as.character(unlist(ligset_list))
ligset_list <- factor(ligset_list, levels = ligset_list)
### Read in alldata.csv to a data frama called 'data'
dock_dir <- paste0(base_dir, "/", prot, "/", dock)
dock_alldata_csv <- paste0(dock_dir, "/", dock, "_alldata.csv")
data <- read.csv(dock_alldata_csv)
### Recode variables with more convenient names (specifically added for particular ligsets)
if(ligset == "pls1a") {
pls1a_coded <- c("ng", "s2", "ne", "s1", "s3")
pls1a_renamed <- factor(c("Garcinol", "CTB", "EGCG", "CTPB", "C646"))
data$lig <- pls1a_renamed[match(data$lig, pls1a_coded)]
data$lig <- factor(data$lig, levels = pls1a_renamed)
ligset_list <- pls1a_renamed
}
### Source list of binding sites by looking at what files are in .../PROT/binding_sites/
binding_sites_dir <- paste0(base_dir, "/binding_sites/", prot_file)
binding_sites <- list.files(path = binding_sites_dir)
binding_sites <- sub(".pdb", "", binding_sites)
### Create binds_in_SITE rows (T/F depending on score fraction)
binding.threshold <- 0.10 # threshold for binding fraction
for(bs in binding_sites) {
bindsin_bs <- paste0("bindsin_", bs)
fraction_bs <- paste0("fraction_", bs)
data[, bindsin_bs][data[,fraction_bs] == 1] <- T
data[, bindsin_bs][data[,fraction_bs] == 0] <- F
}
######################################################################
### Create analysis data frame
analysis <- data.frame(row.names = ligset_list)
#	Build column headers for averages, minimums, standard deviations, distribution fractions
analysis.columns <- c("AvgE", "MinE", "StdevE", paste("Num_", binding_sites, sep = ""),
paste("DistribFrac_", binding_sites, sep = ""),
paste("AvgE_", binding_sites, sep = ""), paste("MinE_", binding_sites, sep = ""))
for(c in analysis.columns) {
analysis[,c] <- rep(NA, length(ligset_list))
}
#	Fill in analysis data
for(l in ligset_list) {
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
analysis_csv = paste0(dock_dir, "/", dock, "_summary.csv")
write.csv(analysis, file = analysis_csv)
print(paste0("Created summary CSV"))
#	Fill in analysis data
for(l in ligset_list) {
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
print(DistribFrac_Denom)
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
#	Fill in analysis data
for(l in ligset_list) {
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
print(bindsin_count)
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
# print(DistribFrac_Denom)
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
#	Fill in analysis data
for(l in ligset_list) {
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
print(bs)
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
print(DistribFrac_Denom)
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
for(l in ligset_list) {
print(l)
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
print(bs)
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
print(DistribFrac_Denom)
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
for(l in ligset_list) {
print(l)
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
print(bs)
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
print(DistribFrac_Denom)
for(bs in binding_sites) { # fraction of bindings in site from count
analysis[l, DistribFrac_bs] <-
analysis[l, Num_bs] / DistribFrac_Denom
}
}
for(l in ligset_list) {
print(l)
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
print(bs)
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
print(DistribFrac_Denom)
for(bs in binding_sites) { # fraction of bindings in site from count
print(DistribFrac)
DistribFrac <- analysis[l, Num_bs] / DistribFrac_Denom
analysis[l, DistribFrac_bs] <- DistribFrac
}
}
#	Fill in analysis data
for(l in ligset_list) {
print(l)
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
print(DistribFrac_Denom)
for(bs in binding_sites) { # fraction of bindings in site from count
DistribFrac <- analysis[l, Num_bs] / DistribFrac_Denom
print(DistribFrac)
analysis[l, DistribFrac_bs] <- DistribFrac
}
}
#	Fill in analysis data
for(l in ligset_list) {
# print(l)
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
print(DistribFrac_Denom)
for(bs in binding_sites) { # fraction of bindings in site from count
DistribFrac <- analysis[l, Num_bs] / DistribFrac_Denom
# print(DistribFrac)
analysis[l, DistribFrac_bs] <- DistribFrac
}
}
for(l in ligset_list) {
# print(l)
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
}
# print(DistribFrac_Denom)
for(bs in binding_sites) { # fraction of bindings in site from count
print(analysis[l, Num_bs])
DistribFrac <- analysis[l, Num_bs] / DistribFrac_Denom
# print(DistribFrac)
analysis[l, DistribFrac_bs] <- DistribFrac
}
}
for(l in ligset_list) {
for(bs in binding_sites) { # fraction of bindings in site from count
print(analysis[l, Num_bs])
DistribFrac <- analysis[l, Num_bs] / DistribFrac_Denom
# print(DistribFrac)
analysis[l, DistribFrac_bs] <- DistribFrac
}
}
#	Fill in analysis data
for(l in ligset_list) {
# print(l)
analysis[l, "lig"] <- l
analysis[l, "AvgE"] <- mean(data$E[data$lig == l]) # Overall average energy for lig
analysis[l, "MinE"] <- min(data$E[data$lig == l]) # Overall minimum energy for lig
analysis[l, "StdevE"] <- sd(data$E[data$lig == l]) # Overall standard deviation of energies for lig
DistribFrac_Denom <- 0
for(bs in binding_sites) {
Num_bs <- paste0("Num_", bs)
AvgE_bs <- paste0("AvgE_", bs)
MinE_bs <- paste0("MinE_", bs)
DistribFrac_bs <- paste0("DistribFrac_", bs)
bindsin_bs <- paste0("bindsin_", bs)
bindsin_count <- length(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, Num_bs] <- bindsin_count # Number binding in each site
DistribFrac_Denom <- DistribFrac_Denom + bindsin_count
if(analysis[l, Num_bs] > 0) {
analysis[l, AvgE_bs] <-  # Average energy for ligs binding in site
mean(data$E[data$lig == l & data[, bindsin_bs] == T])
analysis[l, MinE_bs] <- # Minimum energy for ligs binding in site
min(data$E[data$lig == l & data[, bindsin_bs] == T])
} else { # otherwise it will return Inf's
analysis[l, AvgE_bs] <- NA
analysis[l, MinE_bs] <- NA
}
print(analysis[l, Num_bs])
}
}
# print(DistribFrac_Denom)
for(l in ligset_list) {
for(bs in binding_sites) { # fraction of bindings in site from count
print(analysis[l, Num_bs])
DistribFrac <- analysis[l, Num_bs] / DistribFrac_Denom
# print(DistribFrac)
analysis[l, DistribFrac_bs] <- DistribFrac
}
}
